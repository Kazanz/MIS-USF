setwd("~/usf/statistical_data_mining/assignment2");
setwd("~/usf/statistical_data_mining/assignment2");
data <- read.csv("HousePrices.csv");
attach(data);
library(lattice);
View(data)
View(data)
setwd("~/usf/statistical_data_mining/assignment3");
data <- read.csv("Catalogs.csv", header=T, skip=2);
View(data)
View(data)
names(data)
attach(data)
cor(cbind(Salary,Children,Catalogs,AmountSpent))
data <- read.csv("Catalogs.csv", header=T, skip=2);
data <- read.csv("Catalogs.csv");
View(data)
View(data)
attach(data)
cor(cbind(Salary,Children,Catalogs,AmountSpent))
cor(Salary,Children,Catalogs,AmountSpent)
cor(cbind(Salary,Children,Catalogs,AmountSpent))
pairs(cbind(Salary,Children,Catalogs,AmountSpent))
summary(lm(AmountSpent~Salary))
summary(lm(AmountSpent~Salary+Children+Catalogs))
options(scipen=5)
options(scipen=5)
summary(lm(AmountSpent~Salary+Children+Catalogs))
summary(lm(AmountSpent~as.factor(age)))
summary(lm(AmountSpent~as.factor(Age)))
summary(lm(AmountSpent~as.Age)
)
summary(lm(AmountSpent~Age))
age.code1 <- array(NA, c(length(Age), 1))
age.code2 <- array(NA, c(length(Age), 1))
for (i in 1:length(Age)){}
for (i in 1:length(Age)){
if (as.numeric(Age)[i]==1) {age.code1[i]<- -1; age.code2[i]<- -100;} if (as.numeric(Age)[i]==2) {age.code1[i]<- 0; age.code2[i]<- 0;} if (as.numeric(Age)[i]==3) {age.code1[i]<- 1; age.code2[i]<- 20;}
if (as.numeric(Age)[i]==1) {age.code1[i]<- -1; age.code2[i]<- -100;} if (as.numeric(Age)[i]==2) {age.code1[i]<- 0; age.code2[i]<- 0;} if (as.numeric(Age)[i]==3) {age.code1[i]<- 1; age.code2[i]<- 20;}
age.code1 <- array(NA, c(length(Age),1)); age.code2 <- array(NA, c(length(Age),1)); for (i in 1:length(Age)){ if (as.numeric(Age)[i]==1) {age.code1[i]<- -1; age.code2[i]<- -100;} if (as.numeric(Age)[i]==2) {age.code1[i]<- 0; age.code2[i]<- 0;} if (as.numeric(Age)[i]==3) {age.code1[i]<- 1; age.code2[i]<- 20;} }
for (i in 1:length(Age)){ if (as.numeric(Age)[i]==1) {age.code1[i]<- -1; age.code2[i]<- -100;} if (as.numeric(Age)[i]==2) {age.code1[i]<- 0; age.code2[i]<- 0;} if (as.numeric(Age)[i]==3) {age.code1[i]<- 1; age.code2[i]<- 20;} }
for (i in 1:length(Age)){ if (as.numeric(Age)[i]==1) {age.code1[i]<- -1; age.code2[i]<- -100} if (as.numeric(Age)[i]==2) {age.code1[i]<- 0 age.code2[i]<- 0;} if (as.numeric(Age)[i]==3) {age.code1[i]<- 1; age.code2[i]<- 20;} }
for (i in 1:length(Age)){
if (as.numeric(Age)[i]==1) {age.code1[i]<- -1; age.code2[i]<- -100;}
if (as.numeric(Age)[i]==2) {age.code1[i]<- 0; age.code2[i]<- 0;}
if (as.numeric(Age)[i]==3) {age.code1[i]<- 1; age.code2[i]<- 20;}
}
summary(lm(AmountSpent~age.code1))
mod4 <- lm(AmountSpent~Salary+Age);
summary(mod4)
plot(mod4$fit~Salary)
plot(mod4~Salary)
plot(mod4$fit~Salary)
plot(mod4$fit~Salary,xlim=c(50000,80000),ylim=c(1000,1700),ylab="",col=4);
plot(mod4$fit~Salary)
plot(mod4$fit~Salary,xlim=c(50000,80000),ylim=c(1000,1700),ylab="",col=4);
plot(mod4$fit~Salary,xlim=c(50000,80000),ylim=c(1000,1700),ylab="",col=5);
plot(mod4$fit~Salary,xlim=c(50000,80000),ylim=c(1000,1700),ylab="",col=4);
summary(lm(AmountSpent~Salary+Location))
unique(Location)
unique(Age)
summary(lm(AmountSpent~Salary+Location+Salary*Location))
summary(lm(AmountSpent~Salary+Location+Salary*as.factor(Location))
summary(lm(AmountSpent~Salary+Location+Salary*as.factor(Location)))
summary(lm(AmountSpent~Salary+Location+Salary*as.factor(Location)))
summary(lm(AmountSpent~Salary+Location+as.Factor(Salary)*as.factor(Location)))
summary(lm(AmountSpent~Salary+Location+as.factor(Salary)*as.factor(Location)))
summary(lm(AmountSpent~Salary+as.factor(Location)+Salary*as.factor(Location)))
summary(lm(AmountSpent~Salary+as.factor(Location)+Salary*as.factor(Location)))
as.factor(location)
as.factor(Location)
as.factor(Location)
as.factor(Location)[0]
as.factor(Location)[0][0]
as.factor(Location)
as.numeric(Location)
summary(lm(AmountSpent~Salary+Location))
summary(lm(AmountSpent~Salary+as.factor(Location))
)
summary(lm(AmountSpent~Salary+as.numeric(Location)))
summary(lm(AmountSpent~Salary+as.factor(Location)+Salary*as.factor(Location)))
summary(lm(AmountSpent~Salary+as.numeric(Location)))
data <- read.csv("Catalogs.csv")
attach(data)
rm(mod4, i, age.code1, age.code2)
rm(data)
data <- read.csv("Catalogs.csv")
attach(data)
View(data)
View(data)
summary(AmountSpent~Salary+Children)
summary(lm(AmountSpent~Salary+Children))
summary(lm(AmountSpent~History))
unique(history)
unique(History)
xyplot(AmountSpent~History)
xyplot(AmountSpent~History)
xyplot(AmountSpent~Salary)
xyplot(AmountSpent~Salary | History)
xyplot(AmountSpent~Salary | History, type = c("p","r"))
summary(lm(AmountSpent~Salary+Children))
summary(lm(AmountSpent~Salary+Children+History*Salary))
summary(lm(AmountSpent~Salary+Children+History*Salary))
data <- read.csv("Prestige.csv")
attach(data)
View(data)
View(data)
xyplot(Prestige~Income)
xyplot(Income~Prestige)
xyplot(log(Income)~Prestige)
xyplot(Income~log(Prestige)
xyplot(Income~log(Prestige)
xyplot(Income~log(Prestige))
xyplot(log(Income)~log(Prestige))
lm(Income~Prestige)
summary(lm(Income~Prestige))
summary(lm(Log(Income)~Prestige))
summary(lm(log(Income)~Prestige))
summary(lm(Income~log(Prestige))
summary(lm(Income~log(Prestige))
summary(lm(Income~log(Prestige)))
summary(lm(log(Income)~log(Prestige)))
summary(lm(Income~log(Prestige)))
summary(lm(log(Income)~log(Prestige)))
summary(lm(log(Income)~Prestige))
summary(lm(Income~Prestige))
summary(lm(log(Income)~log(Prestige)))
summary(lm(log(Income)~Prestige))
summary(lm(log(Income)~Prestige))
summary(lm(Prestige~Income))
summary(lm(Prestige~log(Income))
;
summary(lm(Prestige~log(Income)))
summary(lm(Prestige~log(Income))
;
summary(lm(Prestige~log(Income)))
summary(lm(Prestige~Income))
summary(lm(Prestige~log(Income)))
summary(lm(log(Prestige)~Income))
summary(lm(log(Prestige)~log(Income))
;
summary(lm(log(Prestige)~log(Income))
;
summary(lm(log(Prestige)~log(Income)))
summary(lm(Prestige~log(Income)))
setwd(~/Users/kazanz/projects/phd/positive_affirmation/data_analysis)
setwd("~/Users/kazanz/projects/phd/positive_affirmation/data_analysis")
setwd("~/Users/kazanz/projects/phd/positive_affirmation/data_analysis");
rm(data
)
setwd("~/Users/kazanz/projects/phd/positive_affirmation/data_analysis");
setwd("Users/kazanz/projects/phd/positive_affirmation/data_analysis");
setwd("/Users/kazanz/projects/phd/positive_affirmation/data_analysis");
data <- read.csv("experiment")
data <- read.csv("experiment.csv")
attach(data)
View(data)
View(data)
control_data <- filter(data, control=f)
control_data <- filter(data, control==f)
control_data <- filter(data, control=="f")
control_data <- filter(data, control=="t")
control_data <- filter(data, control=="t")
experiment_data <- filter(data, control=="f")
attach(control_data)
control.data <- subset(data, control="t")
rm(control_data, experiment_data);
attach(control.data)
attach(control.data);
View(control.data)
View(control.data)
exeperiment.data <- subset(data, control="f")
experiment.data <- subset(data, control="f")
rm(exeperiment.data)
View(experiment.data)
View(experiment.data)
View(control.data)
View(control.data)
unattach(data)
attach(control.data)
summary(lm(affirm_count~control)
)
summary(lm(affirm_count~control+login_count)
;
summary(lm(affirm_count~control+login_count))
xyplot(affirm_count+login_count)
xyplot(affirm_count~login_count)
summary(lm(affirm_count~control+login_count))
xyplot(login_count~control)
xyplot(login_count~control)
xyplot(login_count~control)
summary((login_count~control))
summary(lm(login_count~control))
data.remove1 <- subset(data, login_count > 1)
summary(lm(data.remove1$login_count~data.remove1$control))
xyplot(data.remove1$login_count~data.remove1$control)
xyplot(experiment.data$affirm_count~data.remove1$control)
xyplot(avg_login_time~control)
summary(lm((avg_login_time~control))
summary(lm(avg_login_time~control))
summary(lm(avg_login_time~control))
summary(lm(avg_affirm_len~control))
xyplot(avg_affirm_len~control))
histogram(avg_affirm_len|control))
histogram(avg_affirm_len|control)
histogram(avg_affirm_len|as.factor(control)
)
histogram(avg_affirm_len
histogram(avg_affirm_len)
hist(avg_affirm_len)
hist(avg_affirm_len | control)
hist(avg_affirm_len)
histogram(avg_affirm_len, type="count")
help(histogram)
histogram(avg_affirm_len, type="density")
histogram(avg_affirm_len, type="count")
hist(avg_affirm_len)
histogram(avg_affirm_len, type="count")
histogram(avg_affirm_len, type="frequency")
histogram(avg_affirm_len, type="count")
hist(avg_affirm_len)
histogram(avg_affirm_len, type="frequency")
histogram(avg_affirm_len, type="count")
hist(avg_affirm_len)
histogram(avg_affirm_len, type="count")
hist(~avg_affirm_len|control)
histogram(~avg_affirm_len|control)
histogram(~affirm_count|control)
install("shiny")
install.packages("shiny")
rm(*)
View(control.data)
View(control.data)
View(control.data)
View(control.data)
closeAllConnections()
ls()
rm(ls)
rm(ls())
rm(list=ls())
runApp("my-app")
library("shiny")
runExample("01_hello")
runApp("my-app")
setwd("/Users/kazanz/usf/statistical_data_mining")
runApp("my-app")
runExample("02_hello")
runExample("02_text")
runExample("02_text")
runExample("my-app")
runApp("my-app")
runApp("my-app")
runApp("my-app")
load("/Users/kazanz/Downloads/ICPSR_34933/DS0001/34933-0001-Data.rda")
View(da34933.0001)
View(da34933.0001)
load("~/usf/statistical_data_mining/my-app/druguse.rda")
View(da34933.0001)
View(da34933.0001)
View(da34933.0001)
View(da34933.0001)
ls()
rm(list=ls())
load("~/usf/statistical_data_mining/my-app/druguse.rda")
appExample()
library("shiny")
appExample()
runExample()
runExample("02_text")
runApp("my-app")
runApp("my-app")
runApp("my-app")
runApp("my-app")
data
da34933.0001
dimensions(da34933.0001)
colnames(da34933.0001)
runApp("my-app")
runApp("my-app")
runApp("my-app")
runApp("my-app")
runApp("my-app")
runApp("my-app")
runApp("my-app")
runApp("my-app")
runApp("my-app")
runApp("my-app")
runApp("my-app")
runApp('my-app')
rows(da34933.0001)
nrow(da34933.0001)
hist(da34933.0001$CIGEVER)
hist(da34933.0001$CIGTRY)
a <- {"xInput": "CIGTRY"}
a <- c("one", "two")
a
a$one
rm(a)
a = [["one", "two"]]
n = c(2, 3, 5)
> s = c("aa", "bb", "cc")
> b = c(TRUE, FALSE, TRUE)
> df = data.frame(n, s, b)
n = c(2, 3, 5)
s = c("aa", "bb", "cc")
b = c(TRUE, FALSE, TRUE)
df = data.frame(n, s, b)
df
df$n
rm(df, n, b, s)
v = c("CIGTRY")
t = c("xInput")
df = data.frame(t, v)
df
rm(df, t, v)
xInput = c("CIGTRY")
df = data.frame(xInput)
df
df$xInput
da34933.0001$df$xInput
da34933.0001$(df$xInput)
df$xInput
df[,xInput]
df[xInput]
get(df, "xInput")
df
df[[xInput]]
df[["xInput"]]
runApp('my-app')
hist(da34933.0001$CIGTRY)
da34933.0001$CIGTRY
da34933.0001[[df$xInput]]
df$xInput
df$xInput[0]
df$xInput.levels
df$xInput[1]
df$xInput[0]
df$xInput[2]
df$xInput[1]
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
input
input$xInput
runApp('my-app')
input$xInput
input$xInput[1]
input$xInput
type(input$xInput)
typeof(input$xInput)
typeof("CIGTRY")
data
typeof(data)
runApp()
runApp('my-app')
data
runApp()
runApp('my-app')
data
typeof(data)
runApp('my-app')
data
runApp()
runApp('my-app')
da34933.0001.rda
da34933.0001
Q
runApp('my-app')
runApp('my-app')
data
runApp('my-app')
data
load("/Users/kazanz/usf/statistical_data_mining/my-app/data.rda")
runApp('my-app')
data
da34933.0001
Q
runApp('my-app')
data
da34933.0001
Q
runApp('my-app')
hist(da34933.0001$CIGTRY)
hist(da34933.0001[[ input$xInput[1]]])
runApp()
runApp()
runApp('my-app')
runApp('my-app')
paste("a", "b")
runApp('my-app')
runApp('my-app')
View(da34933.0001)
View(da34933.0001)
da34933.0001$CIGTRY
hist(da34933.0001$CIGTRY)
hist(da34933.0001$CIGTRY, xlim=c(10, 20))
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
max(da34933.0001$CIGTRY)
cmax(da34933.0001$CIGTRY)
sapply(da34933.0001$CIGTRY, max, na.rm = TRUE)
max(da34933.0001$CIGTRY, na.rm=TRUE)
runApp('my-app')
max(da34933.0001$ALCTRY, na.rm=TRUE)
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
da34933.0001
rm(xInput, df)
View(da34933.0001)
View(da34933.0001)
aggregate(da34933.0001, by=list(CIGTRY), FUN="count")
aggregate(da34933.0001, by=list(CIGTRY), length)
aggregate(da34933.0001, by=list("CIGTRY"), length)
aggregate(da34933.0001, by=list("CIGTRY"), 1)
da34933.0001.table
da34933.0001
aggregate(da34933.0001$CIGTRY, by=list(SNUFTRY=da34933.0001$SNUFTRY), FUN=sum)
aggregate(da34933.0001$CIGTRY, by=list(SNUFTRY=da34933.0001$SNUFTRY), FUN=sum)
da34933.0001$SNUFTRY
ifelse(da34933.0001$SNUFTRY != NA, 1, 0)
ifelse(da34933.0001$SNUFTRY != NONE, 1, 0)
ifelse(da34933.0001$SNUFTRY != NA, 1, 0)
ifelse(da34933.0001$SNUFTRY > 0, 1, 0)
ifelse(da34933.0001$SNUFTRY == NA, 0, 1)
ifelse(da34933.0001$SNUFTRY == NULL, 0, 1)
ifelse(da34933.0001$SNUFTRY >0, 0, 1)
da34933.0001$SNUFTRY
ifelse(da34933.0001$SNUFTRY >0, 0, 1)
ifelse(da34933.0001$SNUFTRY >0, 0, 1)
vals <- ifelse(da34933.0001$SNUFTRY >0, 0, 1)
vals
is.na(vals) <- 0
vals
vals <- ifelse(da34933.0001$SNUFTRY >0, 0, 1)
vals
ifelse(da34933.0001$SNUFTRY >0, 0, 1)
vals
ifelse(da34933.0001$SNUFTRY > 0, 1, 0)
ifelse(is.na(da34933.0001$SNUFTRY) == TRUE, 0, 1)
count < - ifelse(is.na(da34933.0001$SNUFTRY) == TRUE, 0, 1)
count <- ifelse(is.na(da34933.0001$SNUFTRY) == TRUE, 0, 1)
var <- da34933.0001$CIGTRY
df = data.frame(count, var)
View(df)
View(df)
View(df)
df
aggregate(df$var, by=list(counting=df$age), FUN=sum)
aggregate(da34933.0001$CIGTRY, by=list(SNUFTRY=da34933.0001$SNUFTRY), FUN=sum)
aggregate(df$var, by=list(counting=df$count), FUN=sum)
aggregate(df$count, by=list(counting=df$var), FUN=sum)
typeof(aggregate(df$count, by=list(counting=df$var), FUN=sum))
data.frame(aggregate(df$count, by=list(counting=df$var), FUN=sum))
newdf <- data.frame(aggregate(df$count, by=list(counting=df$var), FUN=sum))
View(newdf)
df <- data.frame(aggregate(df$count, by=list(counting=df$var), FUN=sum))
runApp('my-app')
View(df)
View(df)
runApp('my-app')
xyplot(df$counting~df$x)
runApp('my-app')
df
runApp('my-app')
xyplot(df$count~df$age)
df
runApp('my-app')
xyplot(df$count~df$x)
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
runApp('my-app')
df
runApp('my-app')
View(da34933.0001)
View(da34933.0001)
runApp('my-app')
