xyplot(data$tax_burden~data$gov_expend)
xyplot(data$tax_burden~data$gov_expend, xlabel+"Government Expend. % GDP", ylabel="Tax Burden % GDP")
xyplot(data$tax_burden~data$gov_expend, xlabel="Government Expend. % GDP", yLabel="Tax Burden % GDP")
xyplot(data$tax_burden~data$gov_expend, xlab="Government Expend. % GDP", ylab="Tax Burden % GDP")
xyplot(fdata$tax_burden~fdata$gov_expend, xlab="Government Expend. % GDP", ylab="Tax Burden % GDP")
fdata = filter(data, government="presidential republic")
fdata = data[data$government=="presidential republic"]
fdata = data[data$government== 'presidential republic']
data$government
data[data$government == 'predidential republic', ]
data[data$government == 'predidential republic', ]$government
data[data$government == 'predidential republic', ]
fdata <- data[data$government == 'predidential republic', ]
View(fdata)
rm(fdata)
fdata <- data[data$government == 'parliamentary republic', ]
runApp('govtype')
xyplot(fdata$tax_burden~fdata$gov_expend, xlab="Government Expend. % GDP", ylab="Tax Burden % GDP")
View(filteredData)
choices
c(c(one=1), c(two=2))
c(c(all="All"), choices)
runApp()
runApp()
runApp('govtype')
runApp('govtype')
runApp('govtype')
runApp('govtype')
runApp('govtype')
runApp('govtype')
as.factor(c(1, 2, 3))
data.frame(as.factor(c(1, 2, 3))))
dataframe(as.factor(c(1, 2, 3))))
data.frame(as.factor(c(1, 2, 3))))
data.frame(as.factor(c(1, 2, 3)))
runApp('govtype')
runApp('govtype')
runApp('govtype')
xyplot(data$tax_burden ~ data$gov_expend, type=c("p", "r"),
xlab="Government Expend. % GDP", ylab="Tax Burden % GDP")
runApp('govtype')
xyplot(data$tax_burden ~ data$gov_expend, type=c("p", "r"),
xlab="Government Expend. % GDP", ylab="Tax Burden % GDP", xlim=c(0, 60), ylim=c(0, 50))
xyplot(data$tax_burden ~ data$gov_expend, type=c("p", "r"),
xlab="Government Expend. % GDP", ylab="Tax Burden % GDP", xlim=c(0, 100), ylim=c(0, 100))
xyplot(data$tax_burden ~ data$gov_expend, type=c("p", "r"),
xlab="Government Expend. % GDP", ylab="Tax Burden % GDP", xlim=c(0, 70), ylim=c(0, 60))
xyplot(data$tax_burden ~ data$gov_expend, type=c("p", "r"),
xlab="Government Expend. % GDP", ylab="Tax Burden % GDP", xlim=c(0, 60), ylim=c(0, 50))
max(data$gov_expend)
math.ceiling(max(data$gov_expend))
Math.ceiling(max(data$gov_expend))
round(max(data$gov_expend))
10^ceiling(max(data$gov_expend))
10*ceiling(max(data$gov_expend))
1*ceiling(max(data$gov_expend))
runApp('govtype')
rm(list=ls())
runApp('govtype')
filteredData
runApp('govtype')
filteredData <- data[data$government == 'Parliamentary Republic', ]
filteredData <- data[data$government == "Parliamentary Republic", ]
data
data <- read.csv("world_data.csv")
filteredData <- data[data$government == "Parliamentary Republic", ]
View(filteredData)
View(filteredData)
density(filteredData$purchasing_power_index)
plot(density(filteredData$purchasing_power_index))
library(ggplot2)
ggplot(filteredData, aes(x=quality_of_life_index, colour=cond)) + geom_density()
ggplot(data, aes(x=quality_of_life_index, colour=government)) + geom_density()
plot(density(filteredData$purchasing_power_index))
plot(density(filteredData$purchasing_power_index), main="")
plot(density(filteredData$purchasing_power_index), main="", xlab="quality of life index")
plot(density(filteredData$purchasing_power_index), main="", xlab="quality of life index", xlim=c(0, 200))
max(data$quality_of_life_index)
plot(density(filteredData$purchasing_power_index), main="", xlab="quality of life index", xlim=c(0, 200))
par(mfrow=c(2,1))
plot(density(filteredData$purchasing_power_index), main="", xlab="quality of life index", xlim=c(0, 200))
plot(density(filteredData$pollution_index), main="", xlab="pollution_index", xlim=c(0, 200))
runApp('govtype')
runApp('govtype')
plot(density(filteredData$quality_of_life_index, main="", xlab="Quality of Life Index",
xlim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index)))))
plot(density(filteredData$quality_of_life_index), main="", xlab="Quality of Life Index",
xlim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
runApp('govtype')
data.frame(data$country, data$gov_expend)
View(data)
df <- data.frame(data$country, data$gov_expend)
df[order(df$gov_expend)]
df[order(df$gov_expend), c(2,1)]
df[order(df$gov_expend),]
df$data.gov_expend
df[order(df$data.gov_expend),]
df.columns
??df
help(df)
df.colnames
colnames(df)
colnames(df)[1]
colnames(df)[2]
runApp('govtype')
runApp('govtype')
xyplot(data$quality_of_life_index~data$gov_expend)
xyplot(data$quality_of_life_index~data$gov_expend, main="", ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
hist(428)
xyplot(data$quality_of_life_index~data$gov_expend, main="", ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index, type=c('p', 'r')))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index) type=c('p', 'r'))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index) types=c('p', 'r'))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index), type=c('p', 'r'))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index)), type=c('p', 'r'
)))
xyplot(data$quality_of_life_index~data$gov_expend, main="", ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index)), type=c('  )))
xyplot(data$quality_of_life_index~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
runApp('govtype')
par(mfrow=c(3, 3))
xyplot(data$quality_of_life_index~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$purchasing_power_index~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Purchasing Power Index",
ylim=c(floor(min(data$purchasing_power_index)), ceiling(max(data$purchasing_power_index))))
xyplot(data$safety_index~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Safety Index",
ylim=c(floor(min(data$safety_index)), ceiling(max(data$safety_index))))
xyplot(data$health_care_index~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Health Care Index",
ylim=c(floor(min(data$health_care_index)), ceiling(max(data$health_care_index))))
xyplot(data$cost_of_living_index~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Cost of Living Index",
ylim=c(floor(min(data$cost_of_living_index)), ceiling(max(data$cost_of_living_index))))
xyplot(data$property_price_to_income_ratio~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Property Price to Income Ratio",
ylim=c(floor(min(data$property_price_to_income_ratio)), ceiling(max(data$property_price_to_income_ratio))))
xyplot(data$traffic_commute_time_index~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Traffic Commute Time Index",
ylim=c(floor(min(data$traffic_commute_time_index)), ceiling(max(data$traffic_commute_time_index))))
xyplot(data$pollution_index~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Pollution Index",
ylim=c(floor(min(data$pollution_index)), ceiling(max(data$pollution_index))))
xyplot(data$climate_index~data[[ input$economicIndicatorInput ]], main="", type=c('p', 'r'), ylab="Climate Index",
ylim=c(floor(min(data$climate_index)), ceiling(max(data$climate_index))))
})
par(mfrow=c(3, 3))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
par(mfrow=c(3, 1))
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
hist(24)
hist(244)
xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
plot1 = xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
plot2 = xyplot(data$quality_of_life_index~data$gov_expend, main="", type=c('p', 'r'), ylab="Quality of Life Index",
ylim=c(floor(min(data$quality_of_life_index)), ceiling(max(data$quality_of_life_index))))
grid.arrange(plot1,plot2, ncol=1)
library(gridExtra)
grid.arrange(plot1,plot2, ncol=1)
runApp('govtype')
summary(lm(data$quality_of_life_index))
summary(lm(data$quality_of_life_index~tax_burden+gov_expend+))
summary(lm(data$quality_of_life_index~tax_burden+gov_expend))
summary(lm(data$quality_of_life_index~data$tax_burden+data$gov_expend))
rm(list=ls())
data <- read.csv("world_data.csv")
View(data)
View(data)
summary(lm(data$quality_of_life_index~data$tax_burden+data$gov_expend+data$expend_to_burden_ratio))
summary(lm(data$quality_of_life_index~data$tax_burden))
xyplot(data$quality_of_life_index~data$tax_burden)
xyplot(data$quality_of_life_index~data$log(tax_burden)
)
xyplot(data$quality_of_life_index~log(data$tax_burden))
summary(lm(data$quality_of_life_index~log(data$tax_burden))
)
summary(lm(log(data$quality_of_life_index)~log(data$tax_burden))
)
xyplot(data$quality_of_life_index~log(data$tax_burden))
xyplot(log(data$quality_of_life_index)~log(data$tax_burden))
xyplot(log(data$quality_of_life_index)~data$tax_burden)
xyplot(data$quality_of_life_index~data$tax_burden)
p = xyplot(data$quality_of_life_index~log(data$tax_burden))
p1 = xyplot(data$quality_of_life_index~data$tax_burden)
summary(lm(data$quality_of_life_index~data$tax_burden))
summary(lm(data$quality_of_life_index~log(data$tax_burden))
)
summary(lm(log(data$quality_of_life_index)~data$tax_burden)
)
summary(lm(log(data$quality_of_life_index)~log(data$tax_burden)
)
)
xyplot(log(data$quality_of_life_index)~data$tax_burden)
xyplot(data$quality_of_life_index~data$tax_burden)
xyplot(data$quality_of_life_index~data$tax_burden*data$tax_burden)
xyplot(data$quality_of_life_index~log(data$tax_burden*data$tax_burden))
xyplot(data$quality_of_life_index~data$tax_burden*data$tax_burden)
summary(lm(data$quality_of_life_index~data$tax_burden*data$tax_burden))
summary(lm(data$quality_of_life_index*data$quality_of_life_index~data$tax_burden))
summary(lm(data$quality_of_life_index*data$quality_of_life_index~data$tax_burden^2))
summary(lm(data$quality_of_life_index*data$quality_of_life_index~data$tax_burden))
summary(lm(data$quality_of_life_index*data$quality_of_life_index~data$tax_burden*data*tax_burden))
summary(lm(data$quality_of_life_index*data$quality_of_life_index~data$tax_burden*data$tax_burden))
summary(lm(data$quality_of_life_index*data$quality_of_life_index~data$tax_burden*data$tax_burden))
xyplot(data$quality_of_life~data$gov_expend)
summary(lm(data$quality_of_life~data$gov_expend))
summary(lm(data$quality_of_life~data$gov_expend+data$tax_burden))
summary(lm(data$quality_of_life~data$expend_to_burden_ratio))
xyplot(data$quality_of_life~data$expend_to_burden_ratio)
xyplot(data$quality_of_life~log(data$expend_to_burden_ratio))
summary(lm(data$quality_of_life~log(data$expend_to_burden_ratio))
)
xyplot(data$quality_of_life~log(data$expend_to_burden_ratio))
xyplot(data$quality_of_life~data$expend_to_burden_ratio)
summary(lm(data$quality_of_life~data$expend_to_burden_ratio))
summary(lm(data$quality_of_life~data$expend_to_burden_ratio+data$tax_burden))
summary(lm(data$quality_of_life~data$expend_to_burden_ratio+data$gov_expend))
summary(lm(data$quality_of_life~data$expend_to_burden_ratio))
summary(lm(data$quality_of_life~data$expend_to_burden_ratio))
summary(lm(data$quality_of_life~log(data$expend_to_burden_ratio))
)
summary(lm(data$quality_of_life~data$expend_to_burden_ratio))
summary(lm(data$quality_of_life~data$expend_to_burden_ratio))
summary(lm(data$quality_of_life~data$expend_to_burden_ratio))
)
summary(lm(data$quality_of_life~data$expend_to_burden_ratio))
summary(lm(data$quality_of_life~data$tax_burden))
summary(lm(data$quality_of_life~data$gov_expend))
summary(lm(data$quality_of_life~data$gov_expend+data$tax_burden))
summary(lm(data$quality_of_life~data$gov_expend))
summary(lm(data$quality_of_life~data$gov_expend+data$tax_burden))
summary(lm(data$quality_of_life~data$gov_expend+data$tax_burden+data$expend_to_burden_ratio))
summary(lm(data$quality_of_life~data$gov_expend+data$tax_burden+data$government))
summary(lm(data$quality_of_life~data$gov_expend+data$tax_burden+data$government+data$gov_expend))
summary(lm(data$quality_of_life~data$gov_expend+data$tax_burden+data$government))
summary(lm(data$quality_of_life~data$gov_expend+data$tax_burden+data$government+data$gov_expend))
summary(lm(data$quality_of_life~data$government+data$gov_expend))
summary(lm(data$quality_of_life~data$government+data$gov_expend))
summary(lm(data$quality_of_life~data$government))
summary(lm(data$quality_of_life~data$government+data$gov_expend))
summary(lm(data$quality_of_life~data$tax_burden*data$gov_expend))
summary(lm(data$quality_of_life~data$tax_burden*data$gov_expend+data$government))
summary(lm(data$quality_of_life~data$gov_expend+data$government))
runApp('govtype')
runApp('govtype')
runApp('govtype')
summary(lm(data$tax_burden~data$gov_expenditure))
summary(lm(data$tax_burden~data$gov_expend))
summary(lm(data$tax_burden~data$gov_expend+data$government))
runApp('govtype')
summary(lm(data$gov_expend~data$tax_burden+data$government))
summary(lm(data$gov_expend~data$government))
summary(lm(data$gov_expend~data$tax_burdendata$government))
summary(lm(data$gov_expend~data$tax_burden+data$government))
runApp('govtype')
summary(lm(data$gov_expend~data$tax_burden+data$government))
runApp('govtype')
summary(lm(data$gov_expend~data$tax_burden+data$government))$coefficients
summary(lm(data$gov_expend~data$tax_burden+data$government))$coefficients[0]
summary(lm(data$gov_expend~data$tax_burden+data$government))$coefficients[1]
regr = summary(lm(data$gov_expend~data$tax_burden+data$government))
regr$terms
regr$terms[1]
regr$terms
regr$terms[2]
regr$terms[4]
regr
regr$coefficients
regr$coefficients[1][0]
regr$coefficients[1][1]
regr$coefficients[1][2]
regr$coefficients[1]
regr
regr$residuals
regr
regr$call
regr$terms
regr$residuals
regr
regr$cov.unscaled
regr$cov.unscaled[1]
regr$coefficients
regr$coefficients[2, 4]
regr$coefficients[2, 3]
regr$coefficients[2, 1]
regr$coefficients[2, 0]
regr$coefficients[1, 1]
regr$coefficients[1, 2]
regr
regr$coefficients[1, 0]
regr$coefficients[1, 1]
regr$coefficients["Intercept"]
regr$coefficients
regr
View(data[data$government == "Presidential Republic"])
View(data[data$government == "Presidential Republic", ])
View(data[data$government == "Presidential Republic", ])$country
data[data$government == "Presidential Republic", ]$country
runApp('govtype')
regr$coefficients
for (v in regr) {}
for (v in regr) { print(v) }
for (v in regr) { print(v[0]) }
for (v in regr) { print(v[1]) }
for (v in regr) { print(v[1][1]) }
for (v in regr) { print(v[1, 1) }
for (v in regr) { print(v[1, 1]) }
for (v in regr) { print(v[1, 2]) }
for (v in regr) { print(v[1]) }
for (v in regr) { print(typeof(v[1])) }
v = regr[1]
v
typeof(v)
regr
v = regr$coefficients[1]
v
for (v in regr$coefficients) { print(v) }
names(regr)
regr.call
regr$terms
regr$terms[1]
names(regr$terms)
regr$terms
typeof(regr$terms)
print(regr$terms)
print(regr$terms[1])
print(regr$terms[2])
print(regr$terms[4])
print(regr$terms[2])
print(regr$terms[1, 1])
print(regr$terms[1, 2])
print(regr$terms[1][1])
print(regr$terms[1][2])
myFun <-
function(lm)
{
out <- c(lm$coefficients[1],
lm$coefficients[2],
length(lm$model$y),
summary(lm)$coefficients[2,2],
pf(summary(lm)$fstatistic[1], summary(lm)$fstatistic[2],
summary(lm)$fstatistic[3], lower.tail = FALSE),
summary(lm)$r.squared)
names(out) <- c("intercept","slope","n","slope.SE","p.value","r.squared")
return(out)}
myFun(lm(data$gov_expend~data$tax_burden+data$government))
expr
regr
regr$terms[[1]]
regr$terms[[2]]
regr$terms[[3]]
regr$terms[[4]]
regr$terms[[2]]
regr$terms[[3]]
regr$terms[[4]]
regr$terms[[2]]
coef(regr)
names(coef(regr))
coef(regr)[1]
coef(regr)[0]
coef(regr)[2]
coef(regr)[3]
all.vars(forumla(regr))
all.vars(regr)
variable.names(regr)
variable.names(lm(data$gov_expend~data$tax_burden+data$government))
l = lm(data$gov_expend~data$tax_burden+data$government)
variable.names(l)
variable.names(l)
summar(l)$coeffecients
summary(l)
summary(l)coefficients()
summary(l)$coefficients
summary(l)$coefficients['Pr(>|t|)']
summary(l)$coefficients[1, 'Pr(>|t|)']
for (v in summary(l)$coefficients) { print(v['Pr(>|t|)'])}
for (v in summary(l)$coefficients) { print(v) }
names
names = variable.names(l)
names
names.length
names.Length
length(names)
summary(l)$coefficients
summary(l)$coefficients[1, "Pr(>|t|)"]
summary(l)$coefficients[1, "Pr(>|t|)"] <= .05
summary(l)$coefficients[1, 1]
summary(l)
c(one, two)
c(1, 2)
data.frame(c(1, 2), c(3, 4))
names[2]
names[2][6:]
names[2][6:1202]
substring(names[2], 4)
substring(names[2], 5)
substring(names[2], 6)
substring(names[3], 6)
substring(names[3], 12)
substring(names[3], 15)
substring(names[3], 16)
summary(l)$coefficients
summary(l)$coefficients[3]
summary(l)$coefficients[3]
summary(l)
runApp('govtype')
v
hmm <- data.frame(v)
View(hmm)
View(hmm)
View(hmm)
c(1) + c(3)
c(c(1) + c(3))
c(c(1), c(3))
runApp('govtype')
name.vector
val.vector
runApp('govtype')
val.vectory
val.vector
name.vector
name.vector
val.vector
hmm <- data.frame(name.vector, val.vector)
View(hmm)
data[data$government == substring(names[i], 16), ]
i
data[data$government == substring(names[3], 16), ]
data[data$government == substring(names[3], 16), ]$country
runApp('govtype')
runApp('govtype')
data[data$government == substring(names[3], 16), ]$country
typeof(data[data$government == substring(names[3], 16), ]$country)
data[data$government == substring(names[3], 16), ]$country[1]
as.vector(data[data$government == substring(names[3], 16), ]$country)
paste(as.vector(data[data$government == substring(names[3], 16), ]$country), collapse="", sep="\n")
runApp('govtype')
runApp('govtype')
runApp('govtype')
paste(as.vector(data[data$government == substring(names[3], 16), ]$country), collapse="", sep="\n")
runApp('govtype')
country.vecotr
country.vector
countries
runApp('govtype')
runApp('govtype')
data$country
order(data$country)
data[order(country)]
data[order(data$country)]
data[order(data$country), ]
runApp('govtype')
summary(l)$coefficients
summary(l)
runApp('govtype')
summary(lm(formula = data$gov_expend ~ data$tax_burden + data$government))
runApp('govtype')
rm(list=ls())
runApp('govtype')
summary(regr)$coefficients[1]
runApp('govtype')
summary(regr)$coefficients[i, "Pr(>|t|)"]
summary(regr)$coefficients[i, "Pr(>|t|)"] <= .05
names.vector
name.vector
runApp('govtype')
runApp('govtype')
runApp('govtype')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='kazanz',
token='D7F28AFCE6E81BD55316C4C74C8895AD',
secret='m5pUt9TiY9VxJd20bF/Oxny1fzZ81qqj8bOj5r6Z')
library(rsconnect)
pwd
/Users/kazanz/usf/statistical_data_mining/project/govtype
rsconnect::deployApp('/Users/kazanz/usf/statistical_data_mining/project/govtype')
